:py:mod:`argus.test_utils.expr_gen`
===================================

.. py:module:: argus.test_utils.expr_gen

.. autoapi-nested-parse::

   Hypothesis strategies to generate Argus expressions



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   argus.test_utils.expr_gen.Transformer



Functions
~~~~~~~~~

.. autoapisummary::

   argus.test_utils.expr_gen.argus_expr



Attributes
~~~~~~~~~~

.. autoapisummary::

   argus.test_utils.expr_gen.ARGUS_EXPR_GRAMMAR


.. py:class:: Transformer


   Bases: :py:obj:`lark.Transformer`

   .. py:method:: INT(tok: lark.Token) -> lark.Token

      Convert the value of `tok` from string to int, while maintaining line number & column.

      Performs wrapping conversion for 32-bit integers



.. py:data:: ARGUS_EXPR_GRAMMAR

   

.. py:function:: argus_expr() -> str

   Strategy to generate an Argus STL expression from a pre-defined grammar


