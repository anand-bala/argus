Search.setIndex({"docnames": ["api/argus/_argus/index", "api/argus/index", "api/index", "getting_started", "index"], "filenames": ["api/argus/_argus/index.rst", "api/argus/index.rst", "api/index.rst", "getting_started.rst", "index.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">argus._argus</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">argus</span></code>", "API Reference", "Getting Started", "Argus: Temporal Logic Monitoring Tool"], "terms": {"ab": 1, "arg": 1, "numexpr": 1, "base": [1, 3, 4], "add": 1, "list": [1, 3], "alwai": [1, 3], "boolexpr": 1, "interv": [1, 3], "tupl": [1, 3], "float": [1, 3], "none": 1, "And": 1, "expr": [1, 3], "__and__": 1, "other": 1, "typing_extens": 1, "self": 1, "__invert__": 1, "__or__": 1, "__rand__": 1, "__ror__": 1, "boolsign": [1, 3], "interpolation_method": 1, "_interpolationmethod": 1, "linear": 1, "signal": [1, 4], "bool": 1, "classmethod": 1, "constant": [1, 3], "valu": [1, 3], "from_sampl": [1, 3], "sampl": [1, 3], "push": 1, "time": [1, 3, 4], "cmp": [1, 3], "static": 1, "equal": 1, "lh": [1, 3], "rh": [1, 3], "greater_than": 1, "greater_than_eq": 1, "less_than": 1, "less_than_eq": 1, "not_equ": 1, "constbool": 1, "constfloat": [1, 3], "constint": 1, "int": 1, "constuint": 1, "div": 1, "dividend": 1, "divisor": 1, "eventu": [1, 3], "floatsign": [1, 3], "intsign": 1, "mul": 1, "negat": 1, "next": 1, "Not": 1, "__ge__": 1, "return": [1, 3], "__gt__": 1, "__le__": 1, "__lt__": 1, "__mul__": 1, "__eq__": 1, "__ne__": 1, "__neg__": 1, "__add__": 1, "__radd__": 1, "__rmul__": 1, "__sub__": 1, "__rsub__": 1, "__truediv__": 1, "__rtruediv__": 1, "__abs__": 1, "Or": 1, "gener": [1, 2, 3, 4], "_t": 1, "properti": 1, "start_tim": 1, "end_tim": 1, "kind": 1, "dtype": 1, "is_empti": 1, "trace": [1, 4], "dict": [1, 3], "str": 1, "unsignedintsign": 1, "until": 1, "varbool": 1, "name": [1, 3, 4], "varfloat": [1, 3], "varint": 1, "varuint": 1, "bool_": 1, "classvar": 1, "ellipsi": 1, "float64": 1, "int64": 1, "uint64": 1, "convert": 1, "type": 1, "object": 1, "__int__": 1, "eval_bool_semant": [1, 3], "eval_robust_semant": [1, 3], "parse_expr": [1, 3], "expr_str": 1, "alloweddtyp": 1, "typealia": 1, "__version__": 1, "thi": [2, 4], "page": [2, 4], "contain": [2, 3], "auto": 2, "document": 2, "1": 2, "argu": [2, 3], "creat": [2, 4], "sphinx": 2, "autoapi": 2, "The": [3, 4], "onli": 3, "import": 3, "requir": 3, "us": [3, 4], "i": [3, 4], "follow": [3, 4], "while": 3, "core": 3, "librari": [3, 4], "written": [3, 4], "rust": 3, "packag": [3, 4], "export": 3, "all": 3, "featur": [3, 4], "top": 3, "level": 3, "namespac": 3, "There": 3, "ar": [3, 4], "two": 3, "wai": 3, "python": [3, 4], "api": [3, 4], "string": 3, "parser": 3, "For": 3, "you": 3, "have": 3, "access": 3, "subclass": 3, "x": 3, "y": 3, "print": 3, "op": 3, "greater": 3, "strict": 3, "true": 3, "floatvar": 3, "similarli": [3, 4], "can": 3, "arithmet": 3, "express": 3, "builtin": 3, "oper": 3, "numer": 3, "boolean": 3, "moreov": 3, "build": 3, "tempor": 3, "phi1": 3, "phi2": 3, "10": 3, "0": 3, "In": 3, "abov": 3, "code": 3, "block": 3, "argument": 3, "impli": 3, "inclus": 3, "bound": 3, "logic": 3, "support": 3, "exclus": 3, "real": 3, "practic": 3, "imposs": 3, "exclud": 3, "boundari": 3, "an": [3, 4], "On": 3, "otherhand": 3, "directli": 3, "f": 3, "g": 3, "phi3": 3, "same": 3, "here": 3, "just": [3, 4], "differ": [3, 4], "notat": 3, "To": 3, "random": 3, "data": 3, "rang": 3, "20": 3, "both": 3, "repres": 3, "": [3, 4], "which": 3, "from": [3, 4], "2": 3, "timestamp": 3, "e": 3, "ha": 3, "throughout": 3, "domain": 3, "one": 3, "either": 3, "qualit": 3, "semant": [3, 4], "quantit": 3, "check": 3, "rob": 3, "function": 3, "point": 3, "output": 3, "found": 3, "where": 3, "defin": 3, "assert": 3, "fals": 3, "never": 3, "aim": 4, "stl": 4, "its": 4, "direct": 4, "successor": 4, "my": 4, "inspir": 4, "project": 4, "py": 4, "metric": 4, "pure": 4, "provid": 4, "eleg": 4, "interfac": 4, "evalu": 4, "discret": 4, "mtl": 4, "rtamt": 4, "offlin": 4, "onlin": 4, "specif": 4, "breach": 4, "taliro": 4, "matlab": 4, "toolbox": 4, "design": 4, "falsif": 4, "simul": 4, "test": 4, "cyber": 4, "physic": 4, "system": 4, "respect": 4, "One": 4, "variou": 4, "includ": 4, "abil": 4, "robust": 4, "against": 4, "goal": 4, "focuss": 4, "perform": 4, "eas": 4, "control": 4, "synthesi": 4, "analysi": 4, "train": 4, "them": 4, "panopt": 4, "pip": 4, "oppos": 4, "pyargu": 4, "multipl": 4, "pypi": 4, "current": 4, "minim": 4, "ambigu": 4, "get": 4, "start": 4, "write": 4, "refer": 4, "index": 4, "modul": 4, "search": 4}, "objects": {"": [[1, 0, 0, "-", "argus"]], "argus": [[1, 1, 1, "", "Abs"], [1, 1, 1, "", "Add"], [1, 2, 1, "", "AllowedDtype"], [1, 1, 1, "", "Always"], [1, 1, 1, "", "And"], [1, 1, 1, "", "BoolExpr"], [1, 1, 1, "", "BoolSignal"], [1, 1, 1, "", "Cmp"], [1, 1, 1, "", "ConstBool"], [1, 1, 1, "", "ConstFloat"], [1, 1, 1, "", "ConstInt"], [1, 1, 1, "", "ConstUInt"], [1, 1, 1, "", "Div"], [1, 1, 1, "", "Eventually"], [1, 1, 1, "", "Expr"], [1, 1, 1, "", "FloatSignal"], [1, 1, 1, "", "IntSignal"], [1, 1, 1, "", "Mul"], [1, 1, 1, "", "Negate"], [1, 1, 1, "", "Next"], [1, 1, 1, "", "Not"], [1, 1, 1, "", "NumExpr"], [1, 1, 1, "", "Or"], [1, 1, 1, "", "Signal"], [1, 1, 1, "", "Trace"], [1, 1, 1, "", "UnsignedIntSignal"], [1, 1, 1, "", "Until"], [1, 1, 1, "", "VarBool"], [1, 1, 1, "", "VarFloat"], [1, 1, 1, "", "VarInt"], [1, 1, 1, "", "VarUInt"], [1, 2, 1, "", "__version__"], [0, 0, 0, "-", "_argus"], [1, 1, 1, "", "dtype"], [1, 6, 1, "", "eval_bool_semantics"], [1, 6, 1, "", "eval_robust_semantics"], [1, 6, 1, "", "parse_expr"]], "argus.BoolExpr": [[1, 3, 1, "", "__and__"], [1, 3, 1, "", "__invert__"], [1, 3, 1, "", "__or__"], [1, 3, 1, "", "__rand__"], [1, 3, 1, "", "__ror__"]], "argus.BoolSignal": [[1, 3, 1, "", "at"], [1, 3, 1, "", "constant"], [1, 3, 1, "", "from_samples"], [1, 3, 1, "", "push"]], "argus.Cmp": [[1, 3, 1, "", "equal"], [1, 3, 1, "", "greater_than"], [1, 3, 1, "", "greater_than_eq"], [1, 3, 1, "", "less_than"], [1, 3, 1, "", "less_than_eq"], [1, 3, 1, "", "not_equal"]], "argus.FloatSignal": [[1, 3, 1, "", "at"], [1, 3, 1, "", "constant"], [1, 3, 1, "", "from_samples"], [1, 3, 1, "", "push"]], "argus.IntSignal": [[1, 3, 1, "", "at"], [1, 3, 1, "", "constant"], [1, 3, 1, "", "from_samples"], [1, 3, 1, "", "push"]], "argus.NumExpr": [[1, 3, 1, "", "__abs__"], [1, 3, 1, "", "__add__"], [1, 3, 1, "", "__eq__"], [1, 3, 1, "", "__ge__"], [1, 3, 1, "", "__gt__"], [1, 3, 1, "", "__le__"], [1, 3, 1, "", "__lt__"], [1, 3, 1, "", "__mul__"], [1, 3, 1, "", "__ne__"], [1, 3, 1, "", "__neg__"], [1, 3, 1, "", "__radd__"], [1, 3, 1, "", "__rmul__"], [1, 3, 1, "", "__rsub__"], [1, 3, 1, "", "__rtruediv__"], [1, 3, 1, "", "__sub__"], [1, 3, 1, "", "__truediv__"]], "argus.Signal": [[1, 3, 1, "", "at"], [1, 3, 1, "", "constant"], [1, 4, 1, "", "end_time"], [1, 3, 1, "", "from_samples"], [1, 3, 1, "", "is_empty"], [1, 4, 1, "", "kind"], [1, 3, 1, "", "push"], [1, 4, 1, "", "start_time"]], "argus.UnsignedIntSignal": [[1, 3, 1, "", "at"], [1, 3, 1, "", "constant"], [1, 3, 1, "", "from_samples"], [1, 3, 1, "", "push"]], "argus.dtype": [[1, 3, 1, "", "__eq__"], [1, 3, 1, "", "__int__"], [1, 5, 1, "", "bool_"], [1, 3, 1, "", "convert"], [1, 5, 1, "", "float64"], [1, 5, 1, "", "int64"], [1, 5, 1, "", "uint64"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:data", "3": "py:method", "4": "py:property", "5": "py:attribute", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "data", "Python data"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "function", "Python function"]}, "titleterms": {"argu": [0, 1, 4], "_argu": 0, "packag": 1, "content": [1, 4], "class": 1, "function": 1, "attribut": 1, "api": 2, "refer": 2, "get": 3, "start": 3, "write": 3, "specif": 3, "creat": 3, "signal": 3, "trace": 3, "monitor": [3, 4], "tempor": 4, "logic": 4, "tool": 4, "instal": 4, "indic": 4, "tabl": 4}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"argus._argus": [[0, "module-argus._argus"]], "argus": [[1, "module-argus"]], "Package Contents": [[1, "package-contents"]], "Classes": [[1, "classes"]], "Functions": [[1, "functions"]], "Attributes": [[1, "attributes"]], "API Reference": [[2, "api-reference"]], "Getting Started": [[3, "getting-started"]], "Writing specifications": [[3, "writing-specifications"]], "Creating signal traces": [[3, "creating-signal-traces"]], "Monitoring traces": [[3, "monitoring-traces"]], "Argus: Temporal Logic Monitoring Tool": [[4, "argus-temporal-logic-monitoring-tool"]], "Installing": [[4, "installing"]], "Contents": [[4, "contents"]], "Indices and tables": [[4, "indices-and-tables"]]}, "indexentries": {"argus._argus": [[0, "module-argus._argus"]], "module": [[0, "module-argus._argus"], [1, "module-argus"]], "abs (class in argus)": [[1, "argus.Abs"]], "add (class in argus)": [[1, "argus.Add"]], "alloweddtype (in module argus)": [[1, "argus.AllowedDtype"]], "always (class in argus)": [[1, "argus.Always"]], "and (class in argus)": [[1, "argus.And"]], "boolexpr (class in argus)": [[1, "argus.BoolExpr"]], "boolsignal (class in argus)": [[1, "argus.BoolSignal"]], "cmp (class in argus)": [[1, "argus.Cmp"]], "constbool (class in argus)": [[1, "argus.ConstBool"]], "constfloat (class in argus)": [[1, "argus.ConstFloat"]], "constint (class in argus)": [[1, "argus.ConstInt"]], "constuint (class in argus)": [[1, "argus.ConstUInt"]], "div (class in argus)": [[1, "argus.Div"]], "eventually (class in argus)": [[1, "argus.Eventually"]], "expr (class in argus)": [[1, "argus.Expr"]], "floatsignal (class in argus)": [[1, "argus.FloatSignal"]], "intsignal (class in argus)": [[1, "argus.IntSignal"]], "mul (class in argus)": [[1, "argus.Mul"]], "negate (class in argus)": [[1, "argus.Negate"]], "next (class in argus)": [[1, "argus.Next"]], "not (class in argus)": [[1, "argus.Not"]], "numexpr (class in argus)": [[1, "argus.NumExpr"]], "or (class in argus)": [[1, "argus.Or"]], "signal (class in argus)": [[1, "argus.Signal"]], "trace (class in argus)": [[1, "argus.Trace"]], "unsignedintsignal (class in argus)": [[1, "argus.UnsignedIntSignal"]], "until (class in argus)": [[1, "argus.Until"]], "varbool (class in argus)": [[1, "argus.VarBool"]], "varfloat (class in argus)": [[1, "argus.VarFloat"]], "varint (class in argus)": [[1, "argus.VarInt"]], "varuint (class in argus)": [[1, "argus.VarUInt"]], "__abs__() (argus.numexpr method)": [[1, "argus.NumExpr.__abs__"]], "__add__() (argus.numexpr method)": [[1, "argus.NumExpr.__add__"]], "__and__() (argus.boolexpr method)": [[1, "argus.BoolExpr.__and__"]], "__eq__() (argus.numexpr method)": [[1, "argus.NumExpr.__eq__"]], "__eq__() (argus.dtype method)": [[1, "argus.dtype.__eq__"]], "__ge__() (argus.numexpr method)": [[1, "argus.NumExpr.__ge__"]], "__gt__() (argus.numexpr method)": [[1, "argus.NumExpr.__gt__"]], "__int__() (argus.dtype method)": [[1, "argus.dtype.__int__"]], "__invert__() (argus.boolexpr method)": [[1, "argus.BoolExpr.__invert__"]], "__le__() (argus.numexpr method)": [[1, "argus.NumExpr.__le__"]], "__lt__() (argus.numexpr method)": [[1, "argus.NumExpr.__lt__"]], "__mul__() (argus.numexpr method)": [[1, "argus.NumExpr.__mul__"]], "__ne__() (argus.numexpr method)": [[1, "argus.NumExpr.__ne__"]], "__neg__() (argus.numexpr method)": [[1, "argus.NumExpr.__neg__"]], "__or__() (argus.boolexpr method)": [[1, "argus.BoolExpr.__or__"]], "__radd__() (argus.numexpr method)": [[1, "argus.NumExpr.__radd__"]], "__rand__() (argus.boolexpr method)": [[1, "argus.BoolExpr.__rand__"]], "__rmul__() (argus.numexpr method)": [[1, "argus.NumExpr.__rmul__"]], "__ror__() (argus.boolexpr method)": [[1, "argus.BoolExpr.__ror__"]], "__rsub__() (argus.numexpr method)": [[1, "argus.NumExpr.__rsub__"]], "__rtruediv__() (argus.numexpr method)": [[1, "argus.NumExpr.__rtruediv__"]], "__sub__() (argus.numexpr method)": [[1, "argus.NumExpr.__sub__"]], "__truediv__() (argus.numexpr method)": [[1, "argus.NumExpr.__truediv__"]], "__version__ (in module argus)": [[1, "argus.__version__"]], "argus": [[1, "module-argus"]], "at() (argus.boolsignal method)": [[1, "argus.BoolSignal.at"]], "at() (argus.floatsignal method)": [[1, "argus.FloatSignal.at"]], "at() (argus.intsignal method)": [[1, "argus.IntSignal.at"]], "at() (argus.signal method)": [[1, "argus.Signal.at"]], "at() (argus.unsignedintsignal method)": [[1, "argus.UnsignedIntSignal.at"]], "bool_ (argus.dtype attribute)": [[1, "argus.dtype.bool_"]], "constant() (argus.boolsignal class method)": [[1, "argus.BoolSignal.constant"]], "constant() (argus.floatsignal class method)": [[1, "argus.FloatSignal.constant"]], "constant() (argus.intsignal class method)": [[1, "argus.IntSignal.constant"]], "constant() (argus.signal class method)": [[1, "argus.Signal.constant"]], "constant() (argus.unsignedintsignal class method)": [[1, "argus.UnsignedIntSignal.constant"]], "convert() (argus.dtype class method)": [[1, "argus.dtype.convert"]], "dtype (class in argus)": [[1, "argus.dtype"]], "end_time (argus.signal property)": [[1, "argus.Signal.end_time"]], "equal() (argus.cmp static method)": [[1, "argus.Cmp.equal"]], "eval_bool_semantics() (in module argus)": [[1, "argus.eval_bool_semantics"]], "eval_robust_semantics() (in module argus)": [[1, "argus.eval_robust_semantics"]], "float64 (argus.dtype attribute)": [[1, "argus.dtype.float64"]], "from_samples() (argus.boolsignal class method)": [[1, "argus.BoolSignal.from_samples"]], "from_samples() (argus.floatsignal class method)": [[1, "argus.FloatSignal.from_samples"]], "from_samples() (argus.intsignal class method)": [[1, "argus.IntSignal.from_samples"]], "from_samples() (argus.signal class method)": [[1, "argus.Signal.from_samples"]], "from_samples() (argus.unsignedintsignal class method)": [[1, "argus.UnsignedIntSignal.from_samples"]], "greater_than() (argus.cmp static method)": [[1, "argus.Cmp.greater_than"]], "greater_than_eq() (argus.cmp static method)": [[1, "argus.Cmp.greater_than_eq"]], "int64 (argus.dtype attribute)": [[1, "argus.dtype.int64"]], "is_empty() (argus.signal method)": [[1, "argus.Signal.is_empty"]], "kind (argus.signal property)": [[1, "argus.Signal.kind"]], "less_than() (argus.cmp static method)": [[1, "argus.Cmp.less_than"]], "less_than_eq() (argus.cmp static method)": [[1, "argus.Cmp.less_than_eq"]], "not_equal() (argus.cmp static method)": [[1, "argus.Cmp.not_equal"]], "parse_expr() (in module argus)": [[1, "argus.parse_expr"]], "push() (argus.boolsignal method)": [[1, "argus.BoolSignal.push"]], "push() (argus.floatsignal method)": [[1, "argus.FloatSignal.push"]], "push() (argus.intsignal method)": [[1, "argus.IntSignal.push"]], "push() (argus.signal method)": [[1, "argus.Signal.push"]], "push() (argus.unsignedintsignal method)": [[1, "argus.UnsignedIntSignal.push"]], "start_time (argus.signal property)": [[1, "argus.Signal.start_time"]], "uint64 (argus.dtype attribute)": [[1, "argus.dtype.uint64"]]}})