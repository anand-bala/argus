Search.setIndex({"docnames": ["api/argus/_argus/index", "api/argus/index", "api/argus/test_utils/expr_gen/index", "api/argus/test_utils/index", "api/argus/test_utils/signals_gen/index", "api/index", "getting_started", "index"], "filenames": ["api/argus/_argus/index.rst", "api/argus/index.rst", "api/argus/test_utils/expr_gen/index.rst", "api/argus/test_utils/index.rst", "api/argus/test_utils/signals_gen/index.rst", "api/index.rst", "getting_started.rst", "index.rst"], "titles": ["<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">argus._argus</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">argus</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">argus.test_utils.expr_gen</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">argus.test_utils</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">argus.test_utils.signals_gen</span></code>", "API Reference", "Getting Started", "Argus: Temporal Logic Monitoring Tool"], "terms": {"test_util": [1, 5], "expr_gen": [1, 3, 5], "signals_gen": [1, 3, 5], "ab": 1, "arg": 1, "numexpr": 1, "base": [1, 2, 6, 7], "add": 1, "list": [1, 4, 6], "alwai": [1, 6], "boolexpr": 1, "interv": [1, 6], "tupl": [1, 4, 6], "float": [1, 4, 6], "none": 1, "And": 1, "expr": [1, 6], "__and__": 1, "other": 1, "typing_extens": 1, "self": 1, "__invert__": 1, "__or__": 1, "__rand__": 1, "__ror__": 1, "boolsign": [1, 6], "interpolation_method": 1, "_interpolationmethod": 1, "linear": 1, "signal": [1, 4, 7], "bool": 1, "abstract": 1, "gener": [1, 2, 4, 5, 6, 7], "type": [1, 4], "A": 1, "i": [1, 4, 6, 7], "typic": 1, "declar": 1, "inherit": 1, "from": [1, 2, 6, 7], "thi": [1, 4, 5, 7], "parameter": 1, "one": [1, 6], "more": 1, "variabl": 1, "For": [1, 6], "exampl": 1, "map": 1, "might": 1, "defin": [1, 2, 6], "kt": 1, "vt": 1, "def": 1, "__getitem__": 1, "kei": 1, "etc": 1, "can": [1, 6], "us": [1, 4, 6, 7], "follow": [1, 6, 7], "lookup_nam": 1, "default": 1, "try": 1, "return": [1, 6], "except": 1, "keyerror": 1, "classmethod": 1, "constant": [1, 6], "valu": [1, 2, 6], "from_sampl": [1, 6], "sampl": [1, 4, 6], "push": 1, "time": [1, 4, 6, 7], "cmp": [1, 6], "static": 1, "equal": 1, "lh": [1, 6], "rh": [1, 6], "greater_than": 1, "greater_than_eq": 1, "less_than": 1, "less_than_eq": 1, "not_equ": 1, "constbool": 1, "constfloat": [1, 6], "constint": 1, "int": [1, 2, 4], "constuint": 1, "div": 1, "dividend": 1, "divisor": 1, "eventu": [1, 6], "floatsign": [1, 6], "intsign": 1, "mul": 1, "negat": 1, "next": 1, "Not": 1, "__ge__": 1, "__gt__": 1, "__le__": 1, "__lt__": 1, "__mul__": 1, "__eq__": 1, "__ne__": 1, "__neg__": 1, "__add__": 1, "__radd__": 1, "__rmul__": 1, "__sub__": 1, "__rsub__": 1, "__truediv__": 1, "__rtruediv__": 1, "__abs__": 1, "Or": 1, "_t": 1, "properti": 1, "start_tim": 1, "end_tim": 1, "kind": 1, "dtype": [1, 4], "is_empti": 1, "trace": [1, 7], "dict": [1, 6], "str": [1, 2], "unsignedintsign": 1, "until": 1, "varbool": 1, "name": [1, 6, 7], "varfloat": [1, 6], "varint": 1, "varuint": 1, "bool_": 1, "classvar": 1, "ellipsi": 1, "float64": 1, "int64": 1, "uint64": 1, "convert": [1, 2], "object": 1, "__int__": 1, "eval_bool_semant": [1, 6], "eval_robust_semant": [1, 6], "parse_expr": [1, 6], "expr_str": 1, "alloweddtyp": [1, 4], "typealia": 1, "__version__": 1, "hypothesi": [2, 4], "strategi": [2, 4], "express": [2, 6], "transform": 2, "lark": 2, "tok": 2, "token": 2, "string": [2, 6], "while": [2, 6], "maintain": 2, "line": 2, "number": 2, "column": 2, "perform": [2, 7], "wrap": 2, "convers": 2, "32": 2, "bit": 2, "integ": 2, "argus_expr_grammar": 2, "argus_expr": 2, "an": [2, 6, 7], "stl": [2, 7], "pre": 2, "grammar": 2, "gen_element_fn": 4, "dtype_": 4, "searchstrategi": 4, "gen_sampl": 4, "min_siz": 4, "max_siz": 4, "n_list": 4, "1": [4, 5], "arbitrari": 4, "where": [4, 6], "stamp": 4, "ar": [4, 6, 7], "strictli": 4, "monoton": 4, "increas": 4, "paramet": 4, "multipl": [4, 7], "same": [4, 6], "domain": [4, 6], "test": [4, 7], "against": [4, 7], "metric": [4, 7], "tempor": [4, 6], "logic": [4, 6], "doesn": 4, "t": 4, "check": [4, 6], "non": 4, "overlap": 4, "empty_sign": 4, "constant_sign": 4, "sampled_sign": 4, "x": [4, 6], "draw_index": 4, "vec": 4, "gen_dtyp": 4, "page": [5, 7], "contain": [5, 6], "auto": 5, "document": 5, "argu": [5, 6], "creat": [5, 7], "sphinx": 5, "autoapi": 5, "The": [6, 7], "onli": 6, "import": 6, "requir": 6, "core": 6, "librari": [6, 7], "written": [6, 7], "rust": 6, "packag": [6, 7], "export": 6, "all": 6, "featur": [6, 7], "top": 6, "level": 6, "namespac": 6, "There": 6, "two": 6, "wai": 6, "python": [6, 7], "api": [6, 7], "parser": 6, "you": 6, "have": 6, "access": 6, "subclass": 6, "y": 6, "print": 6, "op": 6, "greater": 6, "strict": 6, "true": 6, "floatvar": 6, "similarli": [6, 7], "arithmet": 6, "builtin": 6, "oper": 6, "numer": 6, "boolean": 6, "moreov": 6, "build": 6, "phi1": 6, "phi2": 6, "10": 6, "0": 6, "In": 6, "abov": 6, "code": 6, "block": 6, "argument": 6, "impli": 6, "inclus": 6, "bound": 6, "support": 6, "exclus": 6, "real": 6, "practic": 6, "imposs": 6, "exclud": 6, "boundari": 6, "On": 6, "otherhand": 6, "directli": 6, "f": 6, "g": 6, "phi3": 6, "here": 6, "just": [6, 7], "differ": [6, 7], "notat": 6, "To": 6, "random": 6, "data": 6, "rang": 6, "20": 6, "both": 6, "repres": 6, "": [6, 7], "which": 6, "2": 6, "timestamp": 6, "e": 6, "ha": 6, "throughout": 6, "either": 6, "qualit": 6, "semant": [6, 7], "quantit": 6, "rob": 6, "function": 6, "point": 6, "output": 6, "found": 6, "assert": 6, "fals": 6, "never": 6, "aim": 7, "its": 7, "direct": 7, "successor": 7, "my": 7, "inspir": 7, "project": 7, "py": 7, "pure": 7, "provid": 7, "eleg": 7, "interfac": 7, "evalu": 7, "discret": 7, "mtl": 7, "rtamt": 7, "offlin": 7, "onlin": 7, "specif": 7, "breach": 7, "taliro": 7, "matlab": 7, "toolbox": 7, "design": 7, "falsif": 7, "simul": 7, "cyber": 7, "physic": 7, "system": 7, "respect": 7, "One": 7, "variou": 7, "includ": 7, "abil": 7, "robust": 7, "goal": 7, "focuss": 7, "eas": 7, "control": 7, "train": 7, "them": 7, "panopt": 7, "pip": 7, "oppos": 7, "pyargu": 7, "pypi": 7, "current": 7, "minim": 7, "ambigu": 7, "get": 7, "start": 7, "write": 7, "refer": 7, "index": 7, "modul": 7, "search": 7}, "objects": {"": [[1, 0, 0, "-", "argus"]], "argus": [[1, 1, 1, "", "Abs"], [1, 1, 1, "", "Add"], [1, 2, 1, "", "AllowedDtype"], [1, 1, 1, "", "Always"], [1, 1, 1, "", "And"], [1, 1, 1, "", "BoolExpr"], [1, 1, 1, "", "BoolSignal"], [1, 1, 1, "", "Cmp"], [1, 1, 1, "", "ConstBool"], [1, 1, 1, "", "ConstFloat"], [1, 1, 1, "", "ConstInt"], [1, 1, 1, "", "ConstUInt"], [1, 1, 1, "", "Div"], [1, 1, 1, "", "Eventually"], [1, 1, 1, "", "Expr"], [1, 1, 1, "", "FloatSignal"], [1, 1, 1, "", "IntSignal"], [1, 1, 1, "", "Mul"], [1, 1, 1, "", "Negate"], [1, 1, 1, "", "Next"], [1, 1, 1, "", "Not"], [1, 1, 1, "", "NumExpr"], [1, 1, 1, "", "Or"], [1, 1, 1, "", "Signal"], [1, 1, 1, "", "Trace"], [1, 1, 1, "", "UnsignedIntSignal"], [1, 1, 1, "", "Until"], [1, 1, 1, "", "VarBool"], [1, 1, 1, "", "VarFloat"], [1, 1, 1, "", "VarInt"], [1, 1, 1, "", "VarUInt"], [1, 2, 1, "", "__version__"], [0, 0, 0, "-", "_argus"], [1, 1, 1, "", "dtype"], [1, 6, 1, "", "eval_bool_semantics"], [1, 6, 1, "", "eval_robust_semantics"], [1, 6, 1, "", "parse_expr"], [3, 0, 0, "-", "test_utils"]], "argus.BoolExpr": [[1, 3, 1, "", "__and__"], [1, 3, 1, "", "__invert__"], [1, 3, 1, "", "__or__"], [1, 3, 1, "", "__rand__"], [1, 3, 1, "", "__ror__"]], "argus.BoolSignal": [[1, 3, 1, "", "at"], [1, 3, 1, "", "constant"], [1, 3, 1, "", "from_samples"], [1, 3, 1, "", "push"]], "argus.Cmp": [[1, 3, 1, "", "equal"], [1, 3, 1, "", "greater_than"], [1, 3, 1, "", "greater_than_eq"], [1, 3, 1, "", "less_than"], [1, 3, 1, "", "less_than_eq"], [1, 3, 1, "", "not_equal"]], "argus.FloatSignal": [[1, 3, 1, "", "at"], [1, 3, 1, "", "constant"], [1, 3, 1, "", "from_samples"], [1, 3, 1, "", "push"]], "argus.IntSignal": [[1, 3, 1, "", "at"], [1, 3, 1, "", "constant"], [1, 3, 1, "", "from_samples"], [1, 3, 1, "", "push"]], "argus.NumExpr": [[1, 3, 1, "", "__abs__"], [1, 3, 1, "", "__add__"], [1, 3, 1, "", "__eq__"], [1, 3, 1, "", "__ge__"], [1, 3, 1, "", "__gt__"], [1, 3, 1, "", "__le__"], [1, 3, 1, "", "__lt__"], [1, 3, 1, "", "__mul__"], [1, 3, 1, "", "__ne__"], [1, 3, 1, "", "__neg__"], [1, 3, 1, "", "__radd__"], [1, 3, 1, "", "__rmul__"], [1, 3, 1, "", "__rsub__"], [1, 3, 1, "", "__rtruediv__"], [1, 3, 1, "", "__sub__"], [1, 3, 1, "", "__truediv__"]], "argus.Signal": [[1, 3, 1, "", "at"], [1, 3, 1, "", "constant"], [1, 4, 1, "", "end_time"], [1, 3, 1, "", "from_samples"], [1, 3, 1, "", "is_empty"], [1, 4, 1, "", "kind"], [1, 3, 1, "", "push"], [1, 4, 1, "", "start_time"]], "argus.UnsignedIntSignal": [[1, 3, 1, "", "at"], [1, 3, 1, "", "constant"], [1, 3, 1, "", "from_samples"], [1, 3, 1, "", "push"]], "argus.dtype": [[1, 3, 1, "", "__eq__"], [1, 3, 1, "", "__int__"], [1, 5, 1, "", "bool_"], [1, 3, 1, "", "convert"], [1, 5, 1, "", "float64"], [1, 5, 1, "", "int64"], [1, 5, 1, "", "uint64"]], "argus.test_utils": [[2, 0, 0, "-", "expr_gen"], [4, 0, 0, "-", "signals_gen"]], "argus.test_utils.expr_gen": [[2, 2, 1, "", "ARGUS_EXPR_GRAMMAR"], [2, 1, 1, "", "Transformer"], [2, 6, 1, "", "argus_expr"]], "argus.test_utils.expr_gen.Transformer": [[2, 3, 1, "", "INT"]], "argus.test_utils.signals_gen": [[4, 6, 1, "", "constant_signal"], [4, 6, 1, "", "draw_index"], [4, 6, 1, "", "empty_signal"], [4, 6, 1, "", "gen_dtype"], [4, 6, 1, "", "gen_element_fn"], [4, 6, 1, "", "gen_samples"], [4, 6, 1, "", "sampled_signal"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:data", "3": "py:method", "4": "py:property", "5": "py:attribute", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "data", "Python data"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "function", "Python function"]}, "titleterms": {"argu": [0, 1, 2, 3, 4, 7], "_argu": 0, "subpackag": 1, "packag": 1, "content": [1, 2, 4, 7], "class": [1, 2], "function": [1, 2, 4], "attribut": [1, 2], "test_util": [2, 3, 4], "expr_gen": 2, "modul": [2, 4], "submodul": 3, "signals_gen": 4, "api": 5, "refer": 5, "get": 6, "start": 6, "write": 6, "specif": 6, "creat": 6, "signal": 6, "trace": 6, "monitor": [6, 7], "tempor": 7, "logic": 7, "tool": 7, "instal": 7, "indic": 7, "tabl": 7}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"argus._argus": [[0, "module-argus._argus"]], "argus": [[1, "module-argus"]], "Subpackages": [[1, "subpackages"]], "Package Contents": [[1, "package-contents"]], "Classes": [[1, "classes"], [2, "classes"]], "Functions": [[1, "functions"], [2, "functions"], [4, "functions"]], "Attributes": [[1, "attributes"], [2, "attributes"]], "argus.test_utils.expr_gen": [[2, "module-argus.test_utils.expr_gen"]], "Module Contents": [[2, "module-contents"], [4, "module-contents"]], "argus.test_utils": [[3, "module-argus.test_utils"]], "Submodules": [[3, "submodules"]], "argus.test_utils.signals_gen": [[4, "module-argus.test_utils.signals_gen"]], "API Reference": [[5, "api-reference"]], "Getting Started": [[6, "getting-started"]], "Writing specifications": [[6, "writing-specifications"]], "Creating signal traces": [[6, "creating-signal-traces"]], "Monitoring traces": [[6, "monitoring-traces"]], "Argus: Temporal Logic Monitoring Tool": [[7, "argus-temporal-logic-monitoring-tool"]], "Installing": [[7, "installing"]], "Contents": [[7, "contents"]], "Indices and tables": [[7, "indices-and-tables"]]}, "indexentries": {"argus._argus": [[0, "module-argus._argus"]], "module": [[0, "module-argus._argus"], [1, "module-argus"], [2, "module-argus.test_utils.expr_gen"], [3, "module-argus.test_utils"], [4, "module-argus.test_utils.signals_gen"]], "abs (class in argus)": [[1, "argus.Abs"]], "add (class in argus)": [[1, "argus.Add"]], "alloweddtype (in module argus)": [[1, "argus.AllowedDtype"]], "always (class in argus)": [[1, "argus.Always"]], "and (class in argus)": [[1, "argus.And"]], "boolexpr (class in argus)": [[1, "argus.BoolExpr"]], "boolsignal (class in argus)": [[1, "argus.BoolSignal"]], "cmp (class in argus)": [[1, "argus.Cmp"]], "constbool (class in argus)": [[1, "argus.ConstBool"]], "constfloat (class in argus)": [[1, "argus.ConstFloat"]], "constint (class in argus)": [[1, "argus.ConstInt"]], "constuint (class in argus)": [[1, "argus.ConstUInt"]], "div (class in argus)": [[1, "argus.Div"]], "eventually (class in argus)": [[1, "argus.Eventually"]], "expr (class in argus)": [[1, "argus.Expr"]], "floatsignal (class in argus)": [[1, "argus.FloatSignal"]], "intsignal (class in argus)": [[1, "argus.IntSignal"]], "mul (class in argus)": [[1, "argus.Mul"]], "negate (class in argus)": [[1, "argus.Negate"]], "next (class in argus)": [[1, "argus.Next"]], "not (class in argus)": [[1, "argus.Not"]], "numexpr (class in argus)": [[1, "argus.NumExpr"]], "or (class in argus)": [[1, "argus.Or"]], "signal (class in argus)": [[1, "argus.Signal"]], "trace (class in argus)": [[1, "argus.Trace"]], "unsignedintsignal (class in argus)": [[1, "argus.UnsignedIntSignal"]], "until (class in argus)": [[1, "argus.Until"]], "varbool (class in argus)": [[1, "argus.VarBool"]], "varfloat (class in argus)": [[1, "argus.VarFloat"]], "varint (class in argus)": [[1, "argus.VarInt"]], "varuint (class in argus)": [[1, "argus.VarUInt"]], "__abs__() (argus.numexpr method)": [[1, "argus.NumExpr.__abs__"]], "__add__() (argus.numexpr method)": [[1, "argus.NumExpr.__add__"]], "__and__() (argus.boolexpr method)": [[1, "argus.BoolExpr.__and__"]], "__eq__() (argus.numexpr method)": [[1, "argus.NumExpr.__eq__"]], "__eq__() (argus.dtype method)": [[1, "argus.dtype.__eq__"]], "__ge__() (argus.numexpr method)": [[1, "argus.NumExpr.__ge__"]], "__gt__() (argus.numexpr method)": [[1, "argus.NumExpr.__gt__"]], "__int__() (argus.dtype method)": [[1, "argus.dtype.__int__"]], "__invert__() (argus.boolexpr method)": [[1, "argus.BoolExpr.__invert__"]], "__le__() (argus.numexpr method)": [[1, "argus.NumExpr.__le__"]], "__lt__() (argus.numexpr method)": [[1, "argus.NumExpr.__lt__"]], "__mul__() (argus.numexpr method)": [[1, "argus.NumExpr.__mul__"]], "__ne__() (argus.numexpr method)": [[1, "argus.NumExpr.__ne__"]], "__neg__() (argus.numexpr method)": [[1, "argus.NumExpr.__neg__"]], "__or__() (argus.boolexpr method)": [[1, "argus.BoolExpr.__or__"]], "__radd__() (argus.numexpr method)": [[1, "argus.NumExpr.__radd__"]], "__rand__() (argus.boolexpr method)": [[1, "argus.BoolExpr.__rand__"]], "__rmul__() (argus.numexpr method)": [[1, "argus.NumExpr.__rmul__"]], "__ror__() (argus.boolexpr method)": [[1, "argus.BoolExpr.__ror__"]], "__rsub__() (argus.numexpr method)": [[1, "argus.NumExpr.__rsub__"]], "__rtruediv__() (argus.numexpr method)": [[1, "argus.NumExpr.__rtruediv__"]], "__sub__() (argus.numexpr method)": [[1, "argus.NumExpr.__sub__"]], "__truediv__() (argus.numexpr method)": [[1, "argus.NumExpr.__truediv__"]], "__version__ (in module argus)": [[1, "argus.__version__"]], "argus": [[1, "module-argus"]], "at() (argus.boolsignal method)": [[1, "argus.BoolSignal.at"]], "at() (argus.floatsignal method)": [[1, "argus.FloatSignal.at"]], "at() (argus.intsignal method)": [[1, "argus.IntSignal.at"]], "at() (argus.signal method)": [[1, "argus.Signal.at"]], "at() (argus.unsignedintsignal method)": [[1, "argus.UnsignedIntSignal.at"]], "bool_ (argus.dtype attribute)": [[1, "argus.dtype.bool_"]], "constant() (argus.boolsignal class method)": [[1, "argus.BoolSignal.constant"]], "constant() (argus.floatsignal class method)": [[1, "argus.FloatSignal.constant"]], "constant() (argus.intsignal class method)": [[1, "argus.IntSignal.constant"]], "constant() (argus.signal class method)": [[1, "argus.Signal.constant"]], "constant() (argus.unsignedintsignal class method)": [[1, "argus.UnsignedIntSignal.constant"]], "convert() (argus.dtype class method)": [[1, "argus.dtype.convert"]], "dtype (class in argus)": [[1, "argus.dtype"]], "end_time (argus.signal property)": [[1, "argus.Signal.end_time"]], "equal() (argus.cmp static method)": [[1, "argus.Cmp.equal"]], "eval_bool_semantics() (in module argus)": [[1, "argus.eval_bool_semantics"]], "eval_robust_semantics() (in module argus)": [[1, "argus.eval_robust_semantics"]], "float64 (argus.dtype attribute)": [[1, "argus.dtype.float64"]], "from_samples() (argus.boolsignal class method)": [[1, "argus.BoolSignal.from_samples"]], "from_samples() (argus.floatsignal class method)": [[1, "argus.FloatSignal.from_samples"]], "from_samples() (argus.intsignal class method)": [[1, "argus.IntSignal.from_samples"]], "from_samples() (argus.signal class method)": [[1, "argus.Signal.from_samples"]], "from_samples() (argus.unsignedintsignal class method)": [[1, "argus.UnsignedIntSignal.from_samples"]], "greater_than() (argus.cmp static method)": [[1, "argus.Cmp.greater_than"]], "greater_than_eq() (argus.cmp static method)": [[1, "argus.Cmp.greater_than_eq"]], "int64 (argus.dtype attribute)": [[1, "argus.dtype.int64"]], "is_empty() (argus.signal method)": [[1, "argus.Signal.is_empty"]], "kind (argus.signal property)": [[1, "argus.Signal.kind"]], "less_than() (argus.cmp static method)": [[1, "argus.Cmp.less_than"]], "less_than_eq() (argus.cmp static method)": [[1, "argus.Cmp.less_than_eq"]], "not_equal() (argus.cmp static method)": [[1, "argus.Cmp.not_equal"]], "parse_expr() (in module argus)": [[1, "argus.parse_expr"]], "push() (argus.boolsignal method)": [[1, "argus.BoolSignal.push"]], "push() (argus.floatsignal method)": [[1, "argus.FloatSignal.push"]], "push() (argus.intsignal method)": [[1, "argus.IntSignal.push"]], "push() (argus.signal method)": [[1, "argus.Signal.push"]], "push() (argus.unsignedintsignal method)": [[1, "argus.UnsignedIntSignal.push"]], "start_time (argus.signal property)": [[1, "argus.Signal.start_time"]], "uint64 (argus.dtype attribute)": [[1, "argus.dtype.uint64"]], "argus_expr_grammar (in module argus.test_utils.expr_gen)": [[2, "argus.test_utils.expr_gen.ARGUS_EXPR_GRAMMAR"]], "int() (argus.test_utils.expr_gen.transformer method)": [[2, "argus.test_utils.expr_gen.Transformer.INT"]], "transformer (class in argus.test_utils.expr_gen)": [[2, "argus.test_utils.expr_gen.Transformer"]], "argus.test_utils.expr_gen": [[2, "module-argus.test_utils.expr_gen"]], "argus_expr() (in module argus.test_utils.expr_gen)": [[2, "argus.test_utils.expr_gen.argus_expr"]], "argus.test_utils": [[3, "module-argus.test_utils"]], "argus.test_utils.signals_gen": [[4, "module-argus.test_utils.signals_gen"]], "constant_signal() (in module argus.test_utils.signals_gen)": [[4, "argus.test_utils.signals_gen.constant_signal"]], "draw_index() (in module argus.test_utils.signals_gen)": [[4, "argus.test_utils.signals_gen.draw_index"]], "empty_signal() (in module argus.test_utils.signals_gen)": [[4, "argus.test_utils.signals_gen.empty_signal"]], "gen_dtype() (in module argus.test_utils.signals_gen)": [[4, "argus.test_utils.signals_gen.gen_dtype"]], "gen_element_fn() (in module argus.test_utils.signals_gen)": [[4, "argus.test_utils.signals_gen.gen_element_fn"]], "gen_samples() (in module argus.test_utils.signals_gen)": [[4, "argus.test_utils.signals_gen.gen_samples"]], "sampled_signal() (in module argus.test_utils.signals_gen)": [[4, "argus.test_utils.signals_gen.sampled_signal"]]}})